---
container:
  image: alpine:3.12

task:
  name: build-${BIN}-${TARGET}
  env:
    BIN: testr
    matrix:
      - TARGET: darwin-x86_64
      - TARGET: freebsd-x86_64
      - TARGET: linux-x86_64
  install_dependencies_script: apk add make
  build_script: |
    make build "TARGET=$TARGET"
    cp "build/$BIN-$TARGET" "$BIN-$TARGET"
    ./.ci/build-checksums.sh "$BIN-$TARGET"
  binaries_artifacts:
    path: "${BIN}-${TARGET}*"

task:
  name: release-version
  env:
    BIN: testr
    GITHUB_TOKEN: ENCRYPTED[7054327568cadd632ef0a293bead22ff3dc5912825d2484f434297b952191427c4b22d2f27c8dffca448a3da40947324]
  only_if: $CIRRUS_TAG != ''
  depends_on:
    - build-testr-darwin-x86_64
    - build-testr-freebsd-x86_64
    - build-testr-linux-x86_64
  install_dependencies_script: apk add curl jo jq
  create_github_release_script: |
    . .ci/cirrus-publish-release.sh

    set -x

    upload_url="$(
      gh_create_version_release \
        "$CIRRUS_REPO_FULL_NAME" \
        "$CIRRUS_TAG" \
        "$CIRRUS_BASE_SHA" \
        "$BIN ${CIRRUS_TAG#v}"
    )" || die "Failed to create release"
    echo "$upload_url" > /tmp/upload_url
  download_cirrus_artifacts_script: |
    . .ci/cirrus-publish-release.sh

    mkdir -p /tmp/release
    cd /tmp/release

    for a in \
      testr-darwin-x86_64 \
      testr-freebsd-x86_64 \
      testr-linux-x86_64
    do
      ci_download "build-$a/binaries/$a"
      ci_download "build-$a/binaries/$a.md5"
      ci_download "build-$a/binaries/$a.sha256"
    done
    ls -l testr*
  upload_release_artifacts_script: |
    . .ci/cirrus-publish-release.sh

    url="$(cat /tmp/upload_url)"
    gh_upload_all "$url" /tmp/release
